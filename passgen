#!/usr/bin/env bash

DIR="$HOME/.secret"
IDX="$DIR/README.md"

LEN=18
KEY="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-=[]{}|;:,.<>?"

password_availablility(){
  password=`grep "| $platform | $username |" $IDX | cut -d' ' -f9`
}

generate(){
  password=`head /dev/urandom | tr -dc $KEY | fold -w $LEN | shuf | head -n1`
}

git_update(){
  git -C "$DIR" add README.md
  git -C "$DIR" commit -q -m "$1"
  git -C "$DIR" push -q
}

retrieve(){
  password_availablility
  [ -z "$password" ] && { echo -e "\e[1;31m404 Not Found\e[0m no password available for \e[1;32m$username\e[0m @ \e[1;32m$platform\e[0m" >&2; exit 1; }
}

update() {
  retrieve
  local id=`grep -n "| $platform | $username |" $IDX | cut -d: -f1`
  generate
  sed -i "$id s/.*/| $(($id-2)) | $platform | $username | $(printf "%q" $password) |/" $IDX
  git_update "update password for $username @ $platform"
}

add(){
  password_availablility
  [ -n "$password" ] && { echo -e "\e[1;31m409 Conflict\e[0m password already available for \e[1;32m$username\e[0m @ \e[1;32m$platform\e[0m" >&2; exit 1; }
  generate
  echo "| $((`wc -l < $IDX`- 1)) | $platform | $username | $password |" >> $IDX
  git_update "add password for $username @ $platform"
}

echo -e "\e[1;32mPassGen\e[0m - Password Generator"
read -p "Platform: " platform
read -p "Username: " username

[[ -z "$platform" || -z "$username" ]] && { echo -e "\e[1;31m400 Bad Request\e[0m empty placeholders for \e[1;32mUSERNAME\e[0m and/or \e[1;32mPLATFORM\e[0m" >&2; exit 1; }

case $1 in
  "-r"|"--retrieve" )
    retrieve
    ;;
  "-u"|"--update" )
    update
    ;;
  * )
    add
    ;;    
esac

echo $password | xclip -selection clipboard
